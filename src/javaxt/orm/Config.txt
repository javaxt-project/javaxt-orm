package ${package};
import javaxt.sql.Connection;
import java.sql.SQLException;
import java.util.concurrent.ConcurrentHashMap;

public class Config {

    private static ConcurrentHashMap<String, Object> config = 
    new ConcurrentHashMap<String, Object>();

    private Config(){}


  //**************************************************************************
  //** getDatabase
  //**************************************************************************
    public static javaxt.sql.Database getDatabase(){
        javaxt.sql.Database db;
        synchronized(config){
            if (config.containsKey("database")){
                db = (javaxt.sql.Database) config.get("database");
            }
            else{
                db = new javaxt.sql.Database();
                db.setDriver("PostgreSQL");
                db.setHost("localhost", 5432);
                db.setName("${package}");
                db.setUserName("postgres");
                db.setPassword("password");
                config.put("database", db);
                config.notifyAll();
            }
        }
        return db;
    }


  //**************************************************************************
  //** initSchema
  //**************************************************************************
    public static void initSchema(Connection conn) throws SQLException {
        
        javaxt.io.Jar jar = new Config().getJar();
        String schema = jar.getEntry("${package}", "Database.sql").getText();
        java.util.ArrayList<String> statements = new java.util.ArrayList<String>();
        for (String s : schema.split(";")){

            StringBuffer str = new StringBuffer();
            for (String i : s.split("\r\n")){
                if (!i.trim().startsWith("--") && !i.trim().startsWith("COMMENT ")){
                    str.append(i + "\r\n");
                }
            }

            String cmd = str.toString().trim();
            if (cmd.length()>0){
                statements.add(str.toString() + ";");
            }
        }
        
        
        java.sql.Statement stmt = conn.getConnection().createStatement();
        for (String cmd : statements){

          //Print table name
            if (cmd.startsWith("CREATE TABLE")){
                String tableName = cmd.substring(cmd.indexOf("TABLE")+5, cmd.indexOf("(")).trim();
                if (tableName.startsWith("\"") && tableName.endsWith("\"")) tableName = tableName.substring(1, tableName.length()-1);
                System.out.println("CREATE " + tableName);
            }

          //Execute statment
            stmt.execute(cmd);
        }
        stmt.close();
    }


  //**************************************************************************
  //** getJar
  //**************************************************************************
    private javaxt.io.Jar getJar(){
        return new javaxt.io.Jar(this);
    }
}